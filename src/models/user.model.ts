import { DataTypes, Model } from "sequelize";
import { sequelize } from "../db/db.config";

export class UserProfile extends Model {}

UserProfile.init(
  {
    firebase_id: {
      type: DataTypes.TEXT,
      allowNull: true,
      primaryKey: true,
    },
    uid: {
      type: DataTypes.TEXT,
      allowNull: true,
      primaryKey: true,
    },

    address: { type: DataTypes.TEXT, allowNull: true, field: 'address' },
    bio: { type: DataTypes.TEXT, allowNull: true, field: 'bio' },
    callSign: { type: DataTypes.TEXT, allowNull: true, field: 'call_sign' },
    callsignSearchIndex: { type: DataTypes.ARRAY(DataTypes.TEXT), allowNull: true, field: 'callsign_search_index' },
    city: { type: DataTypes.TEXT, allowNull: true, field: 'city' },
    continent: { type: DataTypes.TEXT, allowNull: true, field: 'continent' },
    coordinates: { type: DataTypes.JSONB, allowNull: true, field: 'coordinates' },
    country: { type: DataTypes.TEXT, allowNull: true, field: 'country' },
    countryCode: { type: DataTypes.TEXT, allowNull: true, field: 'country_code' },
    cqZone: { type: DataTypes.BIGINT, allowNull: true, field: 'cq_zone' },
    dxccNumber: { type: DataTypes.BIGINT, allowNull: true, field: 'dxcc_number' },
    email: { type: DataTypes.TEXT, allowNull: true, field: 'email' },
    firstName: { type: DataTypes.TEXT, allowNull: true, field: 'first_name' },
    flagCode: { type: DataTypes.TEXT, allowNull: true, field: 'flag_code' },
    gridSquare: { type: DataTypes.TEXT, allowNull: true, field: 'grid_square' },
    ituZone: { type: DataTypes.BIGINT, allowNull: true, field: 'itu_zone' },
    lastName: { type: DataTypes.TEXT, allowNull: true, field: 'last_name' },
    nameSearchIndex: { type: DataTypes.ARRAY(DataTypes.TEXT), allowNull: true, field: 'name_search_index' },
    needsLocationOnboarding: { type: DataTypes.BOOLEAN, allowNull: true, field: 'needs_location_onboarding' },
    phoneNumber: { type: DataTypes.TEXT, allowNull: true, field: 'phone_number' },
    provideId: { type: DataTypes.TEXT, allowNull: true, field: 'provide_id' },
    state: { type: DataTypes.TEXT, allowNull: true, field: 'state' },
    timestamp: { type: DataTypes.DATE, allowNull: true, field: 'timestamp' },

    lastContactModification: { type: DataTypes.DATE, allowNull: true, field: 'last_contact_modification' },
    needsAggregation: { type: DataTypes.BOOLEAN, allowNull: true, field: 'needs_aggregation' },
    numberOfContactsImported: { type: DataTypes.BIGINT, allowNull: true, field: 'number_of_contacts_imported' },
    quota: { type: DataTypes.JSONB, allowNull: true, field: 'quota' },
    savedLocationId: { type: DataTypes.TEXT, allowNull: true, field: 'saved_location_id' },
    hasStreak: { type: DataTypes.BOOLEAN, allowNull: true, field: 'has_streak' },
    streakStats: { type: DataTypes.JSONB, allowNull: true, field: 'streak_stats' },
    contests: { type: DataTypes.ARRAY(DataTypes.TEXT), allowNull: true, field: 'contests' },
    stripeId: { type: DataTypes.TEXT, allowNull: true, field: 'stripe_id' },
    stripeLink: { type: DataTypes.TEXT, allowNull: true, field: 'stripe_link' },
    foundingMemberCount: { type: DataTypes.BIGINT, allowNull: true, field: 'founding_member_count' },
    membershipStatus: { type: DataTypes.TEXT, allowNull: true, field: 'membership_status' },
    numberOfContacts: { type: DataTypes.BIGINT, allowNull: true, field: 'number_of_contacts' },
    settings: { type: DataTypes.JSONB, allowNull: true, field: 'settings' },
    spottingFilters: { type: DataTypes.JSONB, allowNull: true, field: 'spotting_filters' },
    subscriptionCanceledAt: { type: DataTypes.TEXT, allowNull: true, field: 'subscription_canceled_at' },
    subscriptionCancelOnPeriodEnd: { type: DataTypes.TEXT, allowNull: true, field: 'subscription_cancel_on_period_end' },
    subscriptionCreatedAt: { type: DataTypes.TEXT, allowNull: true, field: 'subscription_created_at' },
    subscriptionEndedAt: { type: DataTypes.TEXT, allowNull: true, field: 'subscription_ended_at' },
    subscriptionStatus: { type: DataTypes.TEXT, allowNull: true, field: 'subscription_status' },
    bands: { type: DataTypes.JSONB, allowNull: true, field: 'bands' },
    modes: { type: DataTypes.JSONB, allowNull: true, field: 'modes' },
    longBio: { type: DataTypes.TEXT, allowNull: true, field: 'long_bio' },
    stateLongName: { type: DataTypes.TEXT, allowNull: true, field: 'state_long_name' },
    admin: { type: DataTypes.BOOLEAN, allowNull: true, field: 'admin' },
    autoExportToQrzLotw: { type: DataTypes.BOOLEAN, allowNull: true, field: 'auto_export_to_qrz_lotw' },
    defaultLogbookSettings: { type: DataTypes.JSONB, allowNull: true, field: 'default_logbook_settings' },
    facebook: { type: DataTypes.TEXT, allowNull: true, field: 'facebook' },
    instagram: { type: DataTypes.TEXT, allowNull: true, field: 'instagram' },
    linkedin: { type: DataTypes.TEXT, allowNull: true, field: 'linkedin' },
    profilePic: { type: DataTypes.TEXT, allowNull: true, field: 'profile_pic' },
    twitter: { type: DataTypes.TEXT, allowNull: true, field: 'twitter' },
    activator: { type: DataTypes.JSONB, allowNull: true, field: 'activator' },
    activityGraphRepaired: { type: DataTypes.BOOLEAN, allowNull: true, field: 'activity_graph_repaired' },
    bugCount: { type: DataTypes.BIGINT, allowNull: true, field: 'bug_count' },
    hunter: { type: DataTypes.JSONB, allowNull: true, field: 'hunter' },
    spotsCreated: { type: DataTypes.BIGINT, allowNull: true, field: 'spots_created' },
  },
  {
    sequelize,
    tableName: 'UserProfile',
    modelName: 'UserProfile',
    timestamps: false,
    indexes: [
      { fields: ['uid'], name: 'userprofile_uid_idx' },
      { fields: ['callSign'], name: 'userprofile_call_sign_idx' },
      { fields: ['email'], name: 'userprofile_email_idx' },
      { fields: ['timestamp'], name: 'userprofile_timestamp_idx' },
    ]
  }
);